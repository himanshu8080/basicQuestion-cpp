
......................binary search..........................

#include <iostream>

using namespace std;

int binarySearch(int arr[],int size,int key){
    int start = 0;
    int end = size-1;
    int mid = (start + end)/2;
    
    while (start <=end ){
        if (arr[mid]==key){
            return mid;
        }
        if (key > arr[mid]){
            start = mid + 1 ;
        }
        else {
            end = mid - 1 ;
        }
        
        mid =(start + end)/2;
    }
    return -1;
     
}



int main()
{
   int arr[5]={14,45,65,76,89};
   int index=binarySearch(arr,5,45);
  
   cout <<"index of 45 is "<<index<<endl;
   return 0;
}

.....................first and last element in an array..............


#include <iostream>

using namespace std;

int firstOcc(int arr[],int size,int key){
    int start = 0;
    int end = size-1;
    int mid = (start + end)/2;
    int ans= -1;
    
    while (start <=end ){
        if (arr[mid]==key){
            ans =mid;
            end = mid - 1 ;
        }
        else if (key > arr[mid]){
            start = mid + 1 ;
        }
        else if (key < arr[mid]){
            end = mid - 1 ;
        }
        
        mid =(start + end)/2;
    }
    return ans;
     
}


int lastOcc(int arr[],int size,int key){
    int start = 0;
    int end = size-1;
    int mid = (start + end)/2;
    int ans= -1;
    
    while (start <=end ){
        if (arr[mid]==key){
            ans =mid;
           start=mid + 1;
        }
        else if (key > arr[mid]){
            start = mid + 1 ;
        }
        else if (key < arr[mid]){
            end = mid - 1 ;
        }
        
        mid =(start + end)/2;
    }
    return ans;
     
}



int main()
{
   int arr[5]={1,14,14,15,34};
   int index=firstOcc(arr,5,14);
  
   cout <<"index of 14 is "<<index<<endl;
   cout <<"index of 14 is "<<lastOcc(arr,5,14)<<endl;
   return 0;
}


...............................finding the pivot element in an array..............



#include<iostream> 
using namespace std;

int pivot(int arr[],int size){
    int start=0;
    int  end =size - 1 ;
    int mid =(start + end)/2;
    
    
    
    while(start<end){
        if (arr[mid] >= arr[0]){
            start = mid + 1 ;
        }
        else if (arr[mid] <arr[0]){
            end = mid;
        } 
        mid=(start + end)/2;
    }
    return start;
}
int main(){
    int arr[6]={12,23,4,5,7,10};
    cout<<"pivot is"<<pivot(arr,6)<<endl;
    
    return 0;
}